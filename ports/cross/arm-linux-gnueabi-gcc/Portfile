# -*- coding: utf-8; mode: tcl; tab-width: 4; indent-tabs-mode: nil; c-basic-offset: 4 -*- vim:fenc=utf-8:ft=tcl:et:sw=4:ts=4:sts=4
# $Id$

PortSystem          1.0
name                arm-linux-gnueabi-gcc
version             4.4.6
categories          cross lang
maintainers         googlemail.com:benedikt.meurer
license             {GPL-3+ Permissive}
description         The GNU Compiler Collection for arm-linux-gnueabi.
long_description    ${description}

homepage            http://gcc.gnu.org/
platforms           darwin
master_sites        gnu:gcc/gcc-${version}
distfiles           gcc-core-${version}.tar.bz2
use_bzip2           yes
universal_variant   no
checksums           gcc-core-${version}.tar.bz2 \
                        md5 c618dde07a74e0d28ba3acd487bb0f3b \
                        sha1 f305ef9c57e8016d37e7726091cb9d5c4013f9aa \
                        rmd160 9bb03852015c16a041566007b83c179178fe06f9
worksrcdir          gcc-${version}

# Parameters for this port.
set crossgcc-target arm-linux-gnueabi

depends_lib         bin:${crossgcc-target}-ar:${crossgcc-target}-binutils \
                    bin:${crossgcc-target}-as:${crossgcc-target}-binutils \
                    bin:${crossgcc-target}-ld:${crossgcc-target}-binutils \
                    bin:${crossgcc-target}-nm:${crossgcc-target}-binutils \
                    bin:${crossgcc-target}-objdump:${crossgcc-target}-binutils \
                    bin:${crossgcc-target}-ranlib:${crossgcc-target}-binutils \
                    bin:${crossgcc-target}-strip:${crossgcc-target}-binutils \
                    port:${crossgcc-target}-eglibc \
                    port:${crossgcc-target}-linux-libc-dev \
                    port:gmp \
                    port:mpfr \
                    port:libiconv

patchfiles          001-gcc-glimits-MB_LEN_MAX.patch \
                    100-alpha-mieee-default.patch \
                    110-trampolinewarn.patch \
                    130-cross-compile.patch \
                    140-default-format-security.patch \
                    150-default-fortify-source.patch \
                    160-netbsd-symbolic.patch \
                    170-sparc64-bsd.patch \
                    180-libgomp-no-werror.patch \
                    190-flatten-switch-stmt-00.patch \
                    200-libiberty.h-asprintf.patch \
                    210-arm-unbreak-armv4t.patch \
                    220-libiberty-pic.patch \
                    230-superh-default-multilib.patch \
                    250-ia64-noteGNUstack.patch \
                    260-sh-libgcc-stacks.patch \
                    270-sh-pr24836.patch \
                    280-freebsd.patch \
                    290-freebsd.patch \
                    360-arm-bigendian.patch \
                    370-bootstrap-target_lib_path.patch \
                    380-powerpc-libgcc_s-link-libm.patch \
                    390-arm-softfloat-libgcc.patch \
                    410-libgcc_eh.a.patch
patch.pre_args      -p1

# All cross ports violate the mtree layout
destroot.violate_mtree  yes

# Download everything to gcc/
dist_subdir         gcc

# Since we don't build gcc and binutils at the same time, gcc's Makefile will try to transform
# program names as gcc's name (add -${version} with ${version} being the version of gcc).
# But it won't work because binutils binaries don't have the ${version} suffix, and even if they
# had, they would actually have the binutils' version suffix (and not gcc's version).
# So let's tell gcc's Makefile not to do that mistake.
set environment     [list AR_FOR_TARGET=${crossgcc-target}-ar \
                     AS_FOR_TARGET=${crossgcc-target}-as \
                     LD_FOR_TARGET=${crossgcc-target}-ld \
                     NM_FOR_TARGET=${crossgcc-target}-nm \
                     OBJDUMP_FOR_TARGET=${crossgcc-target}-objdump \
                     RANLIB_FOR_TARGET=${crossgcc-target}-ranlib \
                     STRIP_FOR_TARGET=${crossgcc-target}-strip]

# Build in a different directory, as advised in the README file.
pre-configure {
    file mkdir "${workpath}/build"
}
# the generated compiler doesn't accept -arch
configure.cc_archflags
configure.cxx_archflags
configure.objc_archflags
configure.ld_archflags
configure.compiler  gcc-4.2
configure.dir       ${workpath}/build
configure.cmd       ${worksrcpath}/configure
configure.env       ${environment}
configure.args      --includedir='${prefix}/${crossgcc-target}/include' \
                    --infodir='${prefix}/share/info' \
                    --mandir='${prefix}/share/man' \
                    --target=${crossgcc-target} \
                    --program-prefix=${crossgcc-target}- \
                    --with-libs='${prefix}/${crossgcc-target}/lib' \
                    --with-system-zlib \
                    --with-gmp='${prefix}' \
                    --with-mpfr='${prefix}' \
                    --with-pkgversion='MacPorts 2011/11/26' \
                    --with-float=soft \
                    --disable-checking \
                    --disable-libgomp \
                    --disable-libmudflap \
                    --disable-libssp \
                    --disable-libstdcxx-pch \
                    --disable-nls \
                    --enable-__cxa_atexit \
                    --enable-c99 \
                    --enable-interwork \
                    --enable-languages='c' \
                    --enable-long-long \
                    --enable-shared \
                    --enable-symvers=gnu \
                    --enable-target-optspace \
                    --enable-threads=posix
if {${os.platform} == "darwin" && ($build_arch == "x86_64" || $build_arch == "ppc64")} {
    configure.args-append   --build=${build_arch}-apple-darwin${os.version} \
                            --host=${build_arch}-apple-darwin${os.version}
}
build.dir           ${workpath}/build

pre-destroot {
	# gcc needs the cross directory structure to be present
	# in order to fill it during installation.
	file mkdir "${destroot}${prefix}/${crossgcc-target}/bin"
	file mkdir "${destroot}${prefix}/${crossgcc-target}/lib"
}

post-destroot {
	# FSF propaganda (should already be there or would conflict)
	file delete -force "${destroot}${prefix}/share/info"
	file delete -force "${destroot}${prefix}/share/man/man7"

	# (host) libiberty
	foreach f [glob -directory "${destroot}${prefix}/lib" libiberty.a */libiberty.a] {
       file delete $f
    }
}

livecheck.type  regex
livecheck.url   http://gcc.gnu.org/gcc-4.4/
livecheck.regex GCC (4\\.4\\.\[0-9\])
